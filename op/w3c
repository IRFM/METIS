#! /bin/ksh

# w3c - temporary wrapper script for .libs/w3c
# Generated by ltmain.sh - GNU libtool 1.3.4 (1.385.2.196 1999/12/07 21:47:57)
#
# The w3c program cannot be directly executed until all the libtool
# libraries that it depends on are installed.
#
# This wrapper script should never be moved out of the build directory.
# If it is, it will not operate correctly.

# Sed substitution that helps us do robust quoting.  It backslashifies
# metacharacters that are still active within double-quoted strings.
Xsed='sed -e 1s/^X//'
sed_quote_subst='s/\([\\`\\"$\\\\]\)/\\\1/g'

# The HP-UX ksh and POSIX shell print the target directory to stdout
# if CDPATH is set.
if test "${CDPATH+set}" = set; then CDPATH=:; export CDPATH; fi

relink_command="cc -g -std1 -o \$progdir/\$file HTLine.o ../../Library/src/.libs/libwwwinit.so ../../Library/src/.libs/libwwwapp.so ../../Library/src/.libs/libwwwhtml.so ../../Library/src/.libs/libwwwtelnet.so ../../Library/src/.libs/libwwwnews.so ../../Library/src/.libs/libwwwhttp.so ../../Library/src/.libs/libwwwmime.so ../../Library/src/.libs/libwwwgopher.so ../../Library/src/.libs/libwwwftp.so ../../Library/src/.libs/libwwwfile.so ../../Library/src/.libs/libwwwdir.so ../../Library/src/.libs/libwwwcache.so ../../Library/src/.libs/libwwwstream.so ../../Library/src/.libs/libwwwmux.so ../../Library/src/.libs/libwwwtrans.so ../../Library/src/.libs/libwwwcore.so ../../Library/src/.libs/libwwwutils.so -lm ../../Library/src/.libs/libwwwxml.so ../../modules/expat/xmlparse/.libs/libxmlparse.so ../../modules/expat/xmltok/.libs/libxmltok.so ../../modules/md5/.libs/libmd5.so -Wl,-rpath -Wl,/tmp_mnt/usr/drfc/cgc/matlab5/zineb/v1.5/tar/w3c-libwww-5.3.2/Library/src/.libs:/tmp_mnt/usr/drfc/cgc/matlab5/zineb/v1.5/tar/w3c-libwww-5.3.2/modules/expat/xmlparse/.libs:/tmp_mnt/usr/drfc/cgc/matlab5/zineb/v1.5/tar/w3c-libwww-5.3.2/modules/expat/xmltok/.libs:/tmp_mnt/usr/drfc/cgc/matlab5/zineb/v1.5/tar/w3c-libwww-5.3.2/modules/md5/.libs"

# This environment variable determines our operation mode.
if test "$libtool_install_magic" = "%%%MAGIC variable%%%"; then
  # install mode needs the following variable:
  link_against_libtool_libs=' ../../Library/src/libwwwinit.la ../../Library/src/libwwwapp.la ../../Library/src/libwwwhtml.la ../../Library/src/libwwwtelnet.la ../../Library/src/libwwwnews.la ../../Library/src/libwwwhttp.la ../../Library/src/libwwwmime.la ../../Library/src/libwwwgopher.la ../../Library/src/libwwwftp.la ../../Library/src/libwwwfile.la ../../Library/src/libwwwdir.la ../../Library/src/libwwwcache.la ../../Library/src/libwwwstream.la ../../Library/src/libwwwmux.la ../../Library/src/libwwwtrans.la ../../Library/src/libwwwcore.la ../../Library/src/libwwwutils.la ../../Library/src/libwwwxml.la ../../modules/expat/xmlparse/libxmlparse.la ../../modules/expat/xmltok/libxmltok.la ../../modules/md5/libmd5.la'
else
  # When we are sourced in execute mode, $file and $echo are already set.
  if test "$libtool_execute_magic" != "%%%MAGIC variable%%%"; then
    echo="print -r"
    file="$0"
    # Make sure echo works.
    if test "X$1" = X--no-reexec; then
      # Discard the --no-reexec flag, and continue.
      shift
    elif test "X`($echo '\t') 2>/dev/null`" = 'X\t'; then
      # Yippee, $echo works!
      :
    else
      # Restart under the correct shell, and then maybe $echo will work.
      exec /bin/ksh "$0" --no-reexec ${1+"$@"}
    fi
  fi

  # Find the directory that this script lives in.
  thisdir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`
  test "x$thisdir" = "x$file" && thisdir=.

  # Follow symbolic links until we get to the real thisdir.
  file=`ls -ld "$file" | sed -n 's/.*-> //p'`
  while test -n "$file"; do
    destdir=`$echo "X$file" | $Xsed -e 's%/[^/]*$%%'`

    # If there was a directory component, then change thisdir.
    if test "x$destdir" != "x$file"; then
      case "$destdir" in
      [\/]* | [A-Za-z]:[\/]*) thisdir="$destdir" ;;
      *) thisdir="$thisdir/$destdir" ;;
      esac
    fi

    file=`$echo "X$file" | $Xsed -e 's%^.*/%%'`
    file=`ls -ld "$thisdir/$file" | sed -n 's/.*-> //p'`
  done

  # Try to get the absolute directory name.
  absdir=`cd "$thisdir" && pwd`
  test -n "$absdir" && thisdir="$absdir"

  program=lt-'w3c'
  progdir="$thisdir/.libs"
  
  if test ! -f "$progdir/$program" || \
     { file=`ls -1dt "$progdir/$program" "$progdir/../$program" 2>/dev/null | sed 1q`; \
       test "X$file" != "X$progdir/$program"; }; then

    file="$$-$program"

    if test ! -d "$progdir"; then
      mkdir "$progdir"
    else
      rm -f "$progdir/$file"
    fi

    # relink executable if necessary
    if test -n "$relink_command"; then
      if (cd "$thisdir" && eval $relink_command); then :
      else
	rm -f "$progdir/$file"
	exit 1
      fi
    fi

    mv -f "$progdir/$file" "$progdir/$program" 2>/dev/null ||
    { rm -f "$progdir/$program";
      mv -f "$progdir/$file" "$progdir/$program"; }
    rm -f "$progdir/$file"
  fi

  if test -f "$progdir/$program"; then
    if test "$libtool_execute_magic" != "%%%MAGIC variable%%%"; then
      # Run the actual program with our arguments.

      # Export the path to the program.
      PATH="$progdir:$PATH"
      export PATH

      exec $program ${1+"$@"}

      $echo "$0: cannot exec $program ${1+"$@"}"
      exit 1
    fi
  else
    # The program doesn't exist.
    $echo "$0: error: $progdir/$program does not exist" 1>&2
    $echo "This script is just a wrapper for $program." 1>&2
    echo "See the libtool documentation for more information." 1>&2
    exit 1
  fi
fi
