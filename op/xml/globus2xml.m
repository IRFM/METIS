% get all the data together to define ITER

clear all;clf
addpath /home/dokuka/STRUCT_JO
addpath /home/dokuka/STRUCT_JO/globus
addpath /home/lister/matlab/xmltree

% Vladimir makes the data available

eval(['init_globus'])
tok = 'globus'
load tokamak.mat

% overwrite Vladimir's data

% add other data by hand
imax = [27 27 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 2]*1e3;
umax = [3 3 0.8 0.8 0.8 0.8 0.8 0.8 0.8 0.8 1.4 1.4 1.4 1.4 1.4 1.4 1.4 1.4 2]*1e3;

% GENERAL
dina.general.title='GLOBUS-M';
dina.general.description = ['DINA electromagnetic description of ' upper(dina.general.title)]
dina.general.doc='http://crppwww.epfl.ch';
dina.general.shortname='globusm';
dina.general.update{1}.author='Jo Lister';
dina.general.update{1}.date=datestr(now);
dina.general.update{1}.comment=['First version, autogenerated data taken from Vladmir'...
' Dokuka and supplemented by data from DINA'];

% VESSEL
dina.vessel.title = 'Vacuum vessel'
dina.vessel.description = 'Vacuum vessel'
dina.vessel.doc='http://crppwww.epfl.ch';

rs = tokamak.vessel.r([end 1:end 1]);
zs = tokamak.vessel.z([end 1:end 1]);
cr = (rs(1:end-1)+rs(2:end))/2;
cz = (zs(1:end-1)+zs(2:end))/2;
w = 0.02;
for i=1:length(tokamak.vessel.r)
  dina.vessel.turn{i}.name=['VV' iii(i,3)];
  dina.vessel.turn{i}.id=i;
  dina.vessel.turn{i}.type='contour';
  dl = abs((cr(i+1)-cr(i))+sqrt(-1)*(cz(i+1)-cz(i)));
  dina.vessel.turn{i}.area=dl*w;
  dina.vessel.turn{i}.res=tokamak.vessel.res(i);
  ang1 = atan2(zs(i+2)-zs(i),rs(i+1)-rs(i))-pi/2;
  ang2 = atan2(zs(i+2)-zs(i),rs(i+1)-rs(i))-pi/2;  
  contour = ...
  [cr(i)+w/2*cos(ang1)*[-1 1] cr(i+1)+w/2*cos(ang2)*[1 -1] cr(i)+w/2*cos(ang1)*[-1];...
   cz(i)+w/2*sin(ang1)*[-1 1] cz(i+1)+w/2*sin(ang2)*[1 -1] cz(i)+w/2*sin(ang1)*[-1] ];
  dina.vessel.turn{i}.contour = standardvec(contour);
end


%PFCOILS
dina.pfcoils.title = 'PF Coils'
dina.pfcoils.description = 'PF Coils'
dina.pfcoils.doc='http://crppwww.epfl.ch';

for i=1:length(tokamak.coils.r)
  dina.pfcoils.coil{i}.name=['Coil' iii(i)];
  dina.pfcoils.coil{i}.id=i;
  dina.pfcoils.coil{i}.type='rzdrdz'; 
  dina.pfcoils.coil{i}.res=0;
  dina.pfcoils.coil{i}.turns = tokamak.coils.nt(i);
  dina.pfcoils.coil{i}.rzdrdz=standardvec([tokamak.coils.r(i),tokamak.coils.z(i),tokamak.coils.dr(i),tokamak.coils.dz(i)]);
end

%PFCIRCUITS
dina.pfcircuits.title = 'PF Circuits'
dina.pfcircuits.description = 'PF Circuits'
dina.pfcircuits.doc='http://crppwww.epfl.ch';

for i=1:10
  dina.pfcircuits.circuit{i}.name='tbd';
  dina.pfcircuits.circuit{i}.id=i;
  dina.pfcircuits.circuit{i}.type='tbd'; 
  dina.pfcircuits.circuit{i}.coilconnect=standardvec(i); 
  dina.pfcircuits.circuit{i}.supplyconnect=standardvec(i); 
end

%PFSUPPLIES
dina.pfsupplies.title = 'PF Supplies'
dina.pfsupplies.description = 'PF Supplies'
dina.pfsupplies.doc='http://crppwww.epfl.ch';

for i=1:10
  dina.pfsupplies.supply{i}.name='tbd';
  dina.pfsupplies.supply{i}.id=i;
  dina.pfsupplies.supply{i}.type='thyr'; 
  dina.pfsupplies.supply{i}.imax=imax(i);
  dina.pfsupplies.supply{i}.imin=-imax(i);
  dina.pfsupplies.supply{i}.umax=umax(i);
  dina.pfsupplies.supply{i}.umin=-umax(i);
  dina.pfsupplies.supply{i}.delay=0.6e-3;
  dina.pfsupplies.supply{i}.tau=0.2e-3;
  dina.pfsupplies.supply{i}.res=tokamak.coils.res(i);
end

% MAGDIAG
dina.magdiag.title = 'Magnetic diagnostics'
dina.magdiag.description = 'Magnetic diagnostics'
dina.magdiag.doc='http://crppwww.epfl.ch';

for i=1:length(tokamak.probes.r)
  dina.magdiag.bpol{i}.name=['BP' iii(i)];
  dina.magdiag.bpol{i}.id=i;
  dina.magdiag.bpol{i}.type='TBD';
  dina.magdiag.bpol{i}.r=tokamak.probes.r(i);
  dina.magdiag.bpol{i}.z=tokamak.probes.z(i);
  dina.magdiag.bpol{i}.area=0;
  dina.magdiag.bpol{i}.length=0;
  dina.magdiag.bpol{i}.polangle=tokamak.probes.theta(i)*pi/180;
  dina.magdiag.bpol{i}.torangle=0;
  dina.magdiag.bpol{i}.turns=1;
end

rref = [0 tokamak.loops.r(1)+0*tokamak.loops.r(2:end)];
zref = [0 tokamak.loops.z(1)+0*tokamak.loops.z(2:end)];
for i=1:length(tokamak.loops.r)
  dina.magdiag.dflux{i}.name=['FL' iii(i)];
  dina.magdiag.dflux{i}.id=i;
  dina.magdiag.dflux{i}.type='diff';
  dina.magdiag.dflux{i}.r12=standardvec([tokamak.loops.r(i) rref(i)]);
  dina.magdiag.dflux{i}.z12=standardvec([tokamak.loops.z(i) zref(i)]);
  dina.magdiag.dflux{i}.torangle=2*pi;
end

% LIMITER
dina.limiter.title = 'Limiter'
dina.limiter.description = 'Limiter outline'
dina.limiter.doc='http://crppwww.epfl.ch';
dina.limiter.method='contour';
dina.limiter.r=standardvec(tokamak.limiter.r);
dina.limiter.z=standardvec(tokamak.limiter.z);

tok2 = dina.general.shortname
disp('Saving...')
tree=struct2xml(dina);
save(tree,['dina' tok2 '.xml']);

% make a gif file for adding to the html
clf;plot_tokamak(tok2);gif_make([tok2 '2xml'])

% the following line needs the Java Virtual Machine
fullfile = xslt(['dina' tok2 '.xml'],'dina2htm.xsl',['dina' tok2 '.htm'])

% this line is OK under mat65
web(fullfile,'-browser')

return

