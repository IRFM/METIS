% Make eqdsk file from data generated by FEEQS FBE in inverse mode
% FEEQS must be installed separately on the same computer
% syntax:
%
%  make_eqdsk_with_inverse_feeqs_results(results_file_name,ngrid,filename_in,plotonoff);
%
% input:
%
%   results_file_name = path and name of the results file generated by
%   FEEQS FBE in inverse mode (not the fast mode !)
%
% optional inputs:
%
%
%   ngrid        = number of point in outputed grid, if vector of two
%                  element = [nR,nZ], if empty selected from plasma size 
%                  and requested, precision
%
%   filename_in = optional root name for output file 
%                (must also contains the path)
%
%   plotonoff   = if true, diplay graphs
%
% output:
%
%  one geqdsk file for each for each time slice in the results file
%
% J-F Artaud 2023
function make_eqdsk_with_inverse_feeqs_results(results_file_name,ngrid,filename_in,plotonoff)

% initialisation outputs
profiles_2d = [];
FPSI = [];
FBR = [];
FBZ = [];
FBPHI = [];
plist_out = [];

if nargin < 1
    results_file_name ='';
end
if isempty(results_file_name) 
    [FileName,PathName] = uigetfile('*.mat','Select a FEEQS inverse results file');
    if isempty(FileName) || isnumeric(FileName)
        disp('Ccomputation has been canceled');
        return
    end
    results_file_name = fullfile(PathName,FileName);
end

% load results
rep = load(results_file_name);

if (nargin < 2)
    ngrid = [];
end
if (nargin < 3) || isempty(filename_in)
    filename_in = sprintf('METIS_FEEQS_FBE_%s_%d',rep.post.z0dinput.machine,rep.post.z0dinput.shot);
end

if (nargin < 4) || isempty(plotonoff)
    plotonoff = false;
end

% constant
mu0 = 4 * pi * 1e-7;

% make path for FEEQS
set_reactor_feeqs_path

% times
time_slices = rep.metis_data4feeqs.time;

% rectangle for EQDSK
Rmesh       = rep.Mesh.Coordinates(:,1);
Zmesh       = rep.Mesh.Coordinates(:,2);
rin  = min(Rmesh);
rout = max(Rmesh);
zup  = max(Zmesh);
zlow = min(Zmesh);
kappa_mesh = (zup-zlow) / (rout-rin);
rlim = [rin,rout,rout,rin,rin];
zlim = [zup,zup,zlow,zlow,zup];

if isempty(ngrid)
    nw = ceil(sqrt(length(Rmesh) ./ kappa_mesh ./ 2.1));
    nh = ceil(nw * kappa_mesh);
else
    nw = ngrid(1);
    nh = ngrid(end);
end

% initialize interpollant of fixed grid
FPSI     = scatteredInterpolant(Rmesh(:),Zmesh(:),rep.psi_1st(1:end-1),'natural','linear');
%%lambda   = rep.psi_1st(end);

% loop on profiles time
for k=1:length(time_slices)
    
      fprintf('Creation of EQDSK file from FEEQS FBE inverse mode results @ t = %g (s):\n',time_slices(k));
      if any(~isfinite(rep.PSI_result(1:end-1,k)))
          fprintf('Equilibrium have not converged for this time slice. EQDSK file will be not created\n');
          continue;
      end
      
      % EQDSK file
      %
      rmaxis = rep.R_axe(k);
      zmaxis = rep.Z_axe(k);
      simag  = rep.psi_axe(k);
      sibry  = rep.psi_LCFS(k);
      rcentr = (max(rep.metis_data4feeqs.LCFS.R(k,:)) + min(rep.metis_data4feeqs.LCFS.R(k,:))) / 2;
      bcentr = rep.metis_data4feeqs.fdia(k,end) ./ rcentr;
      current = rep.feeqs_ip(k);
      %
      fpol   = interp1(rep.metis_data4feeqs.psin(k,:),rep.metis_data4feeqs.fdia(k,:),linspace(0,1,nw));
      pres   = interp1(rep.metis_data4feeqs.psin(k,:),rep.metis_data4feeqs.ptot(k,:),linspace(0,1,nw));
      ffprim = interp1(rep.metis_data4feeqs.psin(k,:),rep.metis_data4feeqs.df2dpsi(k,:)/2,linspace(0,1,nw));
      pprime = interp1(rep.metis_data4feeqs.psin(k,:),rep.metis_data4feeqs.dptotdpsi(k,:),linspace(0,1,nw));
      psin_flux = (rep.psi_flux(:,k) - rep.psi_flux(1,k)) ./ (rep.psi_flux(end,k) - rep.psi_flux(1,k));
      if any(~isfinite(psin_flux))
            qpsi   = interp1(rep.metis_data4feeqs.psin(k,:),rep.metis_data4feeqs.q(k,:),linspace(0,1,nw));
      else
            qpsi   = interp1(psin_flux,rep.q_flux(:,k),linspace(0,1,nw));
      end
      %
      lim_el = rep.Mesh.Vacuum{1}.BndNodes;
      rlim   = rep.Mesh.Coordinates(lim_el,1);
      zlim   = rep.Mesh.Coordinates(lim_el,2);
      limitr = length(rlim);
      lim    = NaN * ones(1,2*limitr);
      lim(1:2:2*limitr) = rlim;
      lim(2:2:2*limitr) = zlim;
      rdim = rout - rin;
      zdim = zup  - zlow;
      rleft = rin;
      zmid = (zup + zlow) ./ 2;
      
      % interpolation
      % replace data
      FPSI.Values = rep.PSI_result(1:end-1,k);
      % rectangular 2D grid
      [rgrid, zgrid] = meshgrid(linspace(rin,rout,nw),linspace(zlow,zup,nh));
      % interpolation
      psirz = FPSI(rgrid, zgrid);
      
      rbbbs = rep.P_LCFS{k}(:,1);
      zbbbs = rep.P_LCFS{k}(:,2);
      nbbbs = length(rbbbs);
      bbbs  = NaN * ones(1,2*nbbbs);
      bbbs(1:2:2*nbbbs) = rbbbs;
      bbbs(2:2:2*nbbbs) = zbbbs;
      xdum = 0;
      
      if plotonoff
          
          figure
          subplot(2,2,1)
          contour(rgrid,zgrid,psirz,50)
          colorbar
          hold on
          plot(rbbbs,zbbbs,'.r','LineWidth',2)
          plot(rlim,zlim,'.k')
          xlabel('R [m]','FontSize',12)
          ylabel('Z [m]','FontSize',12)
          axis equal
          axis tight
          hold off
          
          
          subplot(2,2,2)
          plot(qpsi)
          ylabel('qpsi')
          subplot(2,2,3)
          plot(fpol)
          ylabel('fpol')
          subplot(2,2,4)
          plot(pres)
          ylabel('pres')
          
          drawnow
          
      end
      
      %%
      time_eqdsk = time_slices(k);
      shot       = rep.post.z0dinput.shot;
      filename   = sprintf('%s_%g_%dx%d.geqdsk',filename_in,time_eqdsk,nw,nh);
      comment    = 'FEEQS.M from METIS';
      fid        = fopen(filename,'w');
      fprintf(fid,'%8.8d %16.9e %21.21s %4.4d %4.4d %4.4d\n',shot,time_eqdsk,comment(1:min(21,length(comment))),1,nw,nh);
      fclose(fid);
      % dlmwrite(filename,[shot time_eqdsk],'delimiter',' ')
      % dlmwrite(filename,[1 nw nh],'delimiter',' ','coffset',51,'roffset',0,'-append')
      dlmwrite(filename,[rdim zdim rcentr rleft zmid],'-append','precision','%16.9e','delimiter','')
      dlmwrite(filename,[rmaxis zmaxis simag sibry bcentr],'-append','precision','%16.9e','delimiter','')
      dlmwrite(filename,[current simag xdum rmaxis xdum],'-append','precision','%16.9e','delimiter','')
      dlmwrite(filename,[zmaxis xdum sibry xdum xdum],'-append','precision','%16.9e','delimiter','')
      for ind=1:floor(nw/5)
          dlmwrite(filename,fpol(((ind-1)*5+1):((ind-1)*5+5)),'-append','precision','%16.9e','delimiter','')
      end
      dlmwrite(filename,fpol(((ind)*5+1):end),'-append','precision','%16.9e','delimiter','')
      for ind=1:floor(nw/5)
          dlmwrite(filename,pres(((ind-1)*5+1):((ind-1)*5+5)),'-append','precision','%16.9e','delimiter','')
      end
      dlmwrite(filename,pres(((ind)*5+1):end),'-append','precision','%16.9e','delimiter','')
      for ind=1:floor(nw/5)
          dlmwrite(filename,ffprim(((ind-1)*5+1):((ind-1)*5+5)),'-append','precision','%16.9e','delimiter','')
      end
      dlmwrite(filename,ffprim(((ind)*5+1):end),'-append','precision','%16.9e','delimiter','')
      for ind=1:floor(nw/5)
          dlmwrite(filename,pprime(((ind-1)*5+1):((ind-1)*5+5)),'-append','precision','%16.9e','delimiter','')
      end
      dlmwrite(filename,pprime(((ind)*5+1):end),'-append','precision','%16.9e','delimiter','')
      psirz_reshape=reshape(psirz',1,nw*nh);
      for ind=1:floor(nw*nh/5)
          dlmwrite(filename,psirz_reshape(((ind-1)*5+1):((ind-1)*5+5)),'-append','precision','%16.9e','delimiter','')
      end
      dlmwrite(filename,psirz_reshape(((ind)*5+1):end),'-append','precision','%16.9e','delimiter','')
      for ind=1:floor(nw/5)
          dlmwrite(filename,qpsi(((ind-1)*5+1):((ind-1)*5+5)),'-append','precision','%16.9e','delimiter','')
      end
      dlmwrite(filename,qpsi(((ind)*5+1):end),'-append','precision','%16.9e','delimiter','')
      dlmwrite(filename,[nbbbs limitr],'-append','precision','  %i','delimiter','')
      for ind=1:floor(nbbbs*2/5)
          dlmwrite(filename,bbbs(((ind-1)*5+1):((ind-1)*5+5)),'-append','precision','%16.9e','delimiter','')
      end
      dlmwrite(filename,bbbs(((ind)*5+1):end),'-append','precision','%16.9e','delimiter','')
      for ind=1:floor(limitr*2/5)
          dlmwrite(filename,lim(((ind-1)*5+1):((ind-1)*5+5)),'-append','precision','%16.9e','delimiter','')
      end
      dlmwrite(filename,lim(((ind)*5+1):end),'-append','precision','%16.9e','delimiter','')
      
      disp([filename ' saved'])
      %%
      % dlmwrite('wall_rz',rbbbs')
      % dlmwrite('wall_rz',zbbbs','-append')
      
      %type(filename)
      
end
      

